{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","error","getState","_id","log","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb968e27.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventLogout: '[event] Clean events',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload,\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from '../types/types';\n\n// const initialState = {\n//     events: [\n//         {\n//             id: new Date().getTime(),\n//             title: 'Cumpleaños de mi mamá',\n//             start: moment().toDate(),\n//             end: moment().add(2, 'hours').toDate(),\n//             bgcolor: '#fafafa',\n//             notes: 'Comprar el pastel',\n//             user: {\n//                 _id: '123',\n//                 name: 'Germán',\n//             },\n//         },\n//     ],\n//     activeEvent: null,\n// };\n\nconst initialState = {\n    events: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload,\n            };\n        case types.eventAddNew:\n            return { ...state, events: [...state.events, action.payload] };\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null,\n            };\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map((event) =>\n                    event.id === action.payload.id ? action.payload : event\n                ),\n            };\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter((event) => event.id !== state.activeEvent.id),\n                activeEvent: null,\n            };\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload],\n            };\n        case types.eventLogout:\n            return {\n                ...initialState,\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((event) => ({\r\n        ...event,\r\n        end: moment(event.end).toDate(),\r\n        start: moment(event.start).toDate(),\r\n    }));\r\n};\r\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name,\n                };\n\n                console.log(event);\n\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event,\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n};\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.events);\n\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events,\n});\n\nexport const eventLogout = () => ({\n    type: types.eventLogout,\n});\n","import { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n});\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        loginEmail: 'german@gmail.com',\n        loginPassword: '123456',\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        registerName: 'Germán',\n        registerEmail: 'german@gmail.com',\n        registerPassword1: '123456',\n        registerPassword2: '123456',\n    });\n\n    const { loginEmail, loginPassword } = formLoginValues;\n\n    const {\n        registerName,\n        registerEmail,\n        registerPassword1,\n        registerPassword2,\n    } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(loginEmail, loginPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (registerPassword1 !== registerPassword2) {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n        }\n\n        dispatch(startRegister(registerEmail, registerPassword1, registerName));\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"loginEmail\"\n                                value={loginEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"loginPassword\"\n                                value={loginPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"registerName\"\n                                value={registerName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"registerEmail\"\n                                value={registerEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"registerPassword1\"\n                                value={registerPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"registerPassword2\"\n                                value={registerPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const { name } = useSelector((state) => state.auth);\n\n    const dispatch = useDispatch();\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">{name}</span>\n\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span>Salir</span>\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event;\n    return (\n        <div>\n            <strong> {title} </strong>\n            <span>- {user.name} </span>\n        </div>\n    );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n    const dispatch = useDispatch();\n\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleStartChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e,\n        });\n    };\n    const handleEndChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e,\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire(\n                'Error',\n                'La fecha fin debe de ser mayor a la fecha de inicio',\n                'error'\n            );\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\">\n            <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Una descripción corta\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Información adicional\n                    </small>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    };\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n            <span>Borrar evento</span>\n        </button>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { messages } from '../../helpers/calendar-messages-es';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    const { events } = useSelector((state) => state.calendar);\n    const { uid } = useSelector((state) => state.auth);\n    const { activeEvent } = useSelector((state) => state.calendar);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    const onDoubleClick = () => {\n        dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    };\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white',\n        };\n\n        return {\n            style,\n        };\n    };\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent,\n                }}\n            />\n            <AddNewFab />\n\n            {activeEvent && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    );\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return <h5>Espere...</h5>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}